{"version":3,"sources":["logo.svg","Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","url","href","className","style","link","target","recipe","map","ingredient","src","alt","App","useState","recipes","setRecipe","search","setSearch","API_URL","useEffect","console","log","getRecipes","a","fetch","json","response","hits","onSubmit","e","preventDefault","value","type","ingredientLines","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kPAAe,I,qBCmBAA,EAjBA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YAAYC,EAAS,EAATA,IAClD,OACI,mBAAGC,KAAMD,EAAKE,UAAWC,IAAMC,KAAMC,OAAO,SAA5C,SAAqD,sBAAKH,UAAWC,IAAMG,OAAtB,UACjD,6BAAKV,IACL,6BACKG,EAAYQ,KAAI,SAAAC,GAAU,OACvB,6BAAKA,SAGb,2CAAcX,KAEd,qBAAKK,UAAWC,IAAML,MAAOW,IAAKX,EAAOY,IAAI,eCqC1CC,MA7Cf,WACE,IADa,EAGgBC,mBAAS,IAHzB,mBAGNC,EAHM,KAGGC,EAHH,OAIeF,mBAAS,WAJxB,mBAING,EAJM,KAIEC,EAJF,KAKPC,EAAO,0CAAsCF,EAAtC,mBAJE,WAIF,oBAHG,oCAIhBG,qBAAU,WACRC,QAAQC,IAAI,eACZC,MACC,CAACN,IAGJ,IAAMM,EAAU,uCAAG,4BAAAC,EAAA,sEACaC,MAAMN,GADnB,8BAC6BO,OAD7B,OACXC,EADW,OAEjBX,EAAUW,EAASC,MACnBP,QAAQC,IAAIK,EAASC,MAHJ,2CAAH,qDAWhB,OACE,sBAAKxB,UAAU,MAAf,UACE,uBAAMyB,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAAUY,EAAEvB,OAAO,GAAGyB,OACtBF,EAAEvB,OAAO,GAAGyB,MAAQ,GACpBhB,EAAU,KAImBZ,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,SACnC,wBAAQ7B,UAAU,gBAAgB6B,KAAK,SAAvC,uBAEF,qBAAK7B,UAAU,SAAf,SACGW,EAAQN,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEP,YAAaO,EAAOA,OAAO0B,gBAC3BpC,MAAOU,EAAOA,OAAO2B,MACrBpC,SAAUS,EAAOA,OAAOT,SACxBC,MAAOQ,EAAOA,OAAOR,MACrBE,IAAKM,EAAOA,OAAON,KALdM,EAAOA,OAAO2B,gBCzBhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,wB","file":"static/js/main.66fdf6af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport style from './recipe.module.css';\r\nconst Recipe = ({ title, calories, image, ingredients,url}) => {\r\n    return (\r\n        <a href={url} className={style.link} target=\"_blank\"><div className={style.recipe}>\r\n            <h4>{title}</h4>\r\n            <ol>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient}</li>\r\n                ))}\r\n            </ol>\r\n            <p>Calories: {calories}</p>\r\n\r\n            <img className={style.image} src={image} alt=\"None\" />\r\n        </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Recipe","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\n\nfunction App() {\n  const APP_ID = \"13070677\";\n  const APP_KEY = \"fa2574ec4daae30933250b8540a72dca\";\n  const [recipes, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"chicken\");\n  const API_URL = `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n  useEffect(() => {\n    console.log(\"Effect runs\")\n    getRecipes();\n  }, [search])\n  // useState\n\n  const getRecipes = async () => {\n    const response = await (await fetch(API_URL)).json()\n    setRecipe(response.hits);\n    console.log(response.hits)\n  };\n  const getSearch = e => {\n    e.preventDefault();\n    setSearch(e.target[0].value)\n    e.target[0].value = \"\"\n    setRecipe([])\n  }\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipe\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            ingredients={recipe.recipe.ingredientLines}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            url={recipe.recipe.url}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3PpYJ\",\"image\":\"recipe_image__1E84N\",\"link\":\"recipe_link__2xgGk\"};"],"sourceRoot":""}
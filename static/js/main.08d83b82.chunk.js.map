{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","data","setData","setStatus","className","onSubmit","e","preventDefault","text","target","value","completed","id","Math","random","type","required","class","onChange","name","Todo","key","alldata","onClick","temp_data","map","item","document","getElementById","classList","add","setTimeout","filter","el","TodoList","todo","App","useEffect","getLocalData","useState","status","filtered","setFiltered","filterHandler","saveLocal","localStorage","setItem","JSON","stringify","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.08d83b82.chunk.js","sourcesContent":["function Form(props) {\r\n    const [data, setData, setStatus] = [props.data, props.setData, props.setStatus]\r\n    const fetchData = e => {\r\n        e.preventDefault();\r\n        setData([...data, { text: e.target[0].value, completed: false, id: Math.random() * 1000 }])\r\n        e.target[0].value = '';\r\n    }\r\n    const sortHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <form onSubmit={fetchData}>\r\n                <input type=\"text\" required className=\"todo-input\" />\r\n                <button className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <div class=\"select\">\r\n                    <select onChange={sortHandler} name=\"todos\" className=\"filter-todo\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"incomplete\">Not completed</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Form","function Todo({ key, data, setData, alldata }) {\r\n    const deleteHandler = () => {\r\n        let cur_data= document.getElementById(data.id);\r\n        cur_data.classList.add('fall');\r\n        setTimeout(()=>setData(alldata.filter((el) => el.id !== data.id)), 1000)\r\n    };\r\n    const completeHandler = () => {\r\n        let temp_data = alldata.map((item) => {\r\n            if (item.id === data.id) {\r\n                item.completed = !item.completed\r\n            }\r\n            return item\r\n        });\r\n        setData(temp_data)\r\n    }\r\n    return (\r\n        <div id={data.id} className={`todo ${key === data.id ? 'fall' : ''}`}>\r\n            <li className={`todo-item ${data.completed ? 'completed' : ''}`}>{data.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className={`${!data.completed ? 'fas fa-check' : 'far fa-window-close'}`}></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\"\r\n\r\nfunction TodoList({ data, setData }) {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {data.map(todo => (\r\n                    <Todo key={todo.id} data={todo} setData={setData} alldata={data}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/Todolist';\nfunction App() {\n  useEffect(() => {\n    getLocalData();\n  }, [])\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filtered, setFiltered] = useState([]);\n  useEffect(() => {\n    filterHandler();\n    saveLocal();\n  }, [status, data])\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFiltered(data.filter((item) => item.completed));\n        break;\n      case 'incomplete':\n        setFiltered(data.filter((item) => !item.completed));\n        break;\n      default:\n        setFiltered(data);\n        break\n    }\n  }\n  const saveLocal = () => {\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  }\n  const getLocalData = () => {\n    if (localStorage.getItem(\"data\") === null) {\n      localStorage.setItem(\"data\", JSON.stringify([]));\n    } else {\n      setData(JSON.parse(localStorage.getItem(\"data\")));\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Create Todo List</h1>\n\n      </header>\n      <Form data={data} setData={setData} setStatus={setStatus} />\n      <TodoList data={filtered} setData={setData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}